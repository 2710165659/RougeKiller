{"version":3,"file":"js/457.d6eaf48a.js","mappings":"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","sources":["webpack://rouge_vue/./src/store/reviewTask.js","webpack://rouge_vue/./src/components/review/TaskInfo.vue","webpack://rouge_vue/./src/components/review/TaskInfo.vue?c1c7","webpack://rouge_vue/./src/components/review/AddTask.vue","webpack://rouge_vue/./src/components/review/AddTask.vue?e089","webpack://rouge_vue/./src/views/review/ReviewTask.vue","webpack://rouge_vue/./src/views/review/ReviewTask.vue?8586","webpack://rouge_vue/./src/axios.js"],"sourcesContent":["import { defineStore } from \"pinia\"\r\nimport http from \"@/axios\"\r\n\r\nexport const useReviewTask = defineStore(\"reviewTask\", {\r\n    state: () => ({\r\n        data: [],\r\n        loading: false,\r\n        hasMore: true,\r\n        params: {\r\n            url: \"\",\r\n            status: \"\",\r\n            page: 1,\r\n            size: 10,\r\n        }\r\n    }),\r\n    actions: {\r\n        async searchTasks(append = false) {\r\n            // console.log(append);\r\n\r\n            //append = true即为追加数据  \r\n            //追加数据时，如果正在加载数据或者没有更多数据，则不执行请求\r\n            if (append && (this.loading || !this.hasMore)) return\r\n            //如果不是追加数据，则重置页码为1\r\n            if (!append) this.params.page = 1\r\n            this.loading = true\r\n            try {\r\n                const response = await http.get(\"/tasks\", {\r\n                    params: this.params\r\n                })\r\n                if (!append) {\r\n                    this.data = response.data\r\n                } else {\r\n                    this.data = [...this.data, ...response.data]\r\n                }\r\n                this.hasMore = response.data.length >= this.params.size\r\n                if (this.hasMore) this.params.page++\r\n            }\r\n            finally {\r\n                this.loading = false\r\n            }\r\n        },\r\n        async startTask(id) {\r\n            await http.post(\"/tasks/start\", { id })\r\n            await this.searchTasks()\r\n        },\r\n        async deleteTask(id) {\r\n            await http.delete(\"tasks/\" + id)\r\n            await this.searchTasks()\r\n        },\r\n        async addTask(url) {\r\n            await http.post(\"/tasks\", { fullUrl: url })\r\n            await this.resetSearch()\r\n        },\r\n        async resetSearch() {\r\n            this.params.url = \"\"\r\n            this.params.status = \"\"\r\n            this.params.page = 1\r\n            this.params.size = 10\r\n            await this.searchTasks()\r\n        }\r\n    }\r\n})","<template>\r\n    <el-dialog\r\n        v-model=\"visible\"\r\n        title=\"检测任务详情\"\r\n        width=\"600px\"\r\n        :before-close=\"handleClose\"\r\n    >\r\n        <div class=\"task-info-container\" v-if=\"currentData\">\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">ID:</span>\r\n                <span class=\"value\">{{ currentData.id }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">URL:</span>\r\n                <span class=\"value\">{{ currentData.fullUrl }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">状态:</span>\r\n                <el-tag\r\n                    :type=\"\r\n                        currentData.status === '完成'\r\n                            ? 'success'\r\n                            : currentData.status === '失败'\r\n                            ? 'danger'\r\n                            : 'primary'\r\n                    \"\r\n                >\r\n                    {{ currentData.status }}\r\n                </el-tag>\r\n            </div>\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">添加人:</span>\r\n                <span class=\"value\">{{ currentData.name }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">创建时间:</span>\r\n                <span class=\"value\">{{\r\n                    formatDate(currentData.createdAt)\r\n                }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n                <span class=\"label\">更新时间:</span>\r\n                <span class=\"value\">{{\r\n                    formatDate(currentData.updatedAt)\r\n                }}</span>\r\n            </div>\r\n            <div v-if=\"currentData.errorMessage\" class=\"info-row\">\r\n                <span class=\"label\">错误信息:</span>\r\n                <span class=\"value error\">{{ currentData.errorMessage }}</span>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <el-button @click=\"visible = false\">关闭</el-button>\r\n        </template>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst visible = ref(false)\r\nconst currentData = ref(null)\r\n\r\nconst handleClose = (done) => {\r\n    done()\r\n}\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return ''\r\n    const date = new Date(dateString)\r\n    return date.toLocaleString('zh-CN')\r\n}\r\n\r\ndefineExpose({\r\n    show: (data) => {\r\n        currentData.value = data\r\n        visible.value = true\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.task-info-container {\r\n    padding-left: 20px;\r\n    background-color: #2d3338;\r\n    border-radius: 4px;\r\n}\r\n\r\n.info-row {\r\n    display: flex;\r\n    margin-bottom: 8px;\r\n    line-height: 1.5;\r\n    padding: 8px 0;\r\n    border-bottom: 1px solid #3a4249;\r\n}\r\n\r\n.info-row:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.label {\r\n    width: 80px;\r\n    color: #a8b3cf;\r\n    font-weight: bold;\r\n}\r\n\r\n.value {\r\n    flex: 1;\r\n    color: #e0e6ed;\r\n}\r\n\r\n.error {\r\n    color: #f56c6c;\r\n}\r\n\r\n:global(.el-dialog) {\r\n    background-color: #2d3338 !important;\r\n    color: #e0e6ed !important;\r\n    border: none !important;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\r\n    padding-left: 30px;\r\n    padding-top: 30px;\r\n}\r\n\r\n.el-dialog__header {\r\n    background-color: #2d3338 !important;\r\n    border-bottom: 1px solid #3a4249;\r\n    padding: 15px 20px;\r\n}\r\n\r\n:global(.el-dialog__title) {\r\n    color: #e0e6ed !important;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n}\r\n\r\n.el-dialog__body {\r\n    background-color: #2d3338 !important;\r\n    padding: 0;\r\n    color: #e0e6ed;\r\n}\r\n\r\n:deep(.el-dialog__footer) {\r\n    height: 30px;\r\n    background-color: #2d3338 !important;\r\n    border-top: 1px solid #3a4249;\r\n    padding-top: 0;\r\n}\r\n\r\n.el-dialog__headerbtn {\r\n    color: #a8b3cf;\r\n}\r\n</style>","import script from \"./TaskInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskInfo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TaskInfo.vue?vue&type=style&index=0&id=e724b3a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e724b3a2\"]])\n\nexport default __exports__","<template>\r\n    <el-dialog\r\n        v-model=\"visible\"\r\n        title=\"新增检测任务\"\r\n        width=\"600px\"\r\n        :before-close=\"handleClose\"\r\n    >\r\n        <el-form :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"URL\" required>\r\n                <el-input\r\n                    v-model=\"form.url\"\r\n                    placeholder=\"请输入待检测的URL\"\r\n                    clearable\r\n                />\r\n            </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n            <el-button @click=\"visible = false\" type=\"info\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"handleSubmit\">添加</el-button>\r\n        </template>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useReviewTask } from '@/store/reviewTask'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst store = useReviewTask()\r\nconst visible = ref(false)\r\nconst form = ref({\r\n    url: ''\r\n})\r\n\r\nconst handleClose = (done) => {\r\n    done()\r\n}\r\n\r\nconst handleSubmit = () => {\r\n    store.addTask(form.value.url)\r\n    visible.value = false\r\n    ElMessage.success('新增检测任务成功')\r\n}\r\n\r\ndefineExpose({\r\n    show: () => {\r\n        form.value.url = ''\r\n        visible.value = true\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n:global(.el-dialog) {\r\n    background-color: #2d3338 !important;\r\n    color: #e0e6ed !important;\r\n    border: none !important;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\r\n    padding-left: 30px;\r\n    padding-top: 30px;\r\n}\r\n\r\n.el-dialog__header {\r\n    background-color: #2d3338 !important;\r\n    border-bottom: 1px solid #3a4249;\r\n    padding: 15px 20px;\r\n}\r\n\r\n:global(.el-dialog__title) {\r\n    color: #e0e6ed !important;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n}\r\n\r\n.el-dialog__body {\r\n    background-color: #2d3338 !important;\r\n    padding: 20px;\r\n    color: #e0e6ed;\r\n}\r\n\r\n:deep(.el-dialog__footer) {\r\n    height: 30px;\r\n    background-color: #2d3338 !important;\r\n    border-top: 1px solid #3a4249;\r\n    padding-top: 0;\r\n}\r\n\r\n.el-dialog__headerbtn {\r\n    color: #a8b3cf;\r\n}\r\n\r\n.el-form-item__label {\r\n    color: #a8b3cf;\r\n}\r\n\r\n.el-button--primary {\r\n    background-color: #3a5a9c;\r\n    border-color: #4a6db3;\r\n    color: #ffffff;\r\n}\r\n.el-button--primary:hover {\r\n    background-color: #4a6db3;\r\n    border-color: #5a7dc3;\r\n    color: #ffffff;\r\n}\r\n.el-button--info {\r\n    background-color: #343a40;\r\n    border-color: #495057;\r\n    color: #d1d5db;\r\n}\r\n.el-button--info:hover {\r\n    background-color: #3e464e;\r\n    border-color: #6c757d;\r\n    color: #ffffff;\r\n}\r\n</style>","import script from \"./AddTask.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddTask.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddTask.vue?vue&type=style&index=0&id=8fc88de6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8fc88de6\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"task-container\">\r\n        <div class=\"task-title\">检测任务配置</div>\r\n        <div class=\"search-container\">\r\n            <el-form label-width=\"80px\">\r\n                <el-row>\r\n                    <el-col :span=\"6\" :offset=\"1\">\r\n                        <el-form-item label=\"URL\">\r\n                            <el-input v-model=\"store.params.url\" placeholder=\"请输入URL\" class=\"search-input\"\r\n                                :prefix-icon=\"Search\" />\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"6\" :offset=\"1\">\r\n                        <el-form-item label=\"任务状态\">\r\n                            <el-select v-model=\"store.params.status\" placeholder=\"请选择任务状态\" effect=\"dark\">\r\n                                <el-option label=\"待定\" value=\"待定\" />\r\n                                <el-option label=\"进行中\" value=\"进行中\" />\r\n                                <el-option label=\"失败\" value=\"失败\" />\r\n                                <el-option label=\"完成\" value=\"完成\" />\r\n                            </el-select>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"6\" :offset=\"2\">\r\n                        <el-button type=\"primary\" @click=\"search\" :icon=\"Search\">\r\n                            搜索\r\n                        </el-button>\r\n                        <el-button @click=\"resetSearch\" :icon=\"Refresh\" type=\"info\">清空</el-button>\r\n                        <el-button type=\"primary\" @click=\"handleAddTask\">\r\n                            新增检测任务\r\n                        </el-button>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"table-container\">\r\n            <el-table class=\"table\" :data=\"store.data\" stripe table-layout=\"auto\">\r\n                <el-table-column prop=\"id\" label=\"ID\" sortable />\r\n                <el-table-column prop=\"fullUrl\" label=\"检测URL\" />\r\n                <el-table-column prop=\"name\" label=\"添加人\" align=\"center\" sortable />\r\n                <el-table-column prop=\"status\" label=\"任务状态\" align=\"center\" sortable />\r\n                <el-table-column label=\"任务操作\" align=\"center\">\r\n                    <template #default=\"data\">\r\n                        <el-button type=\"success\" @click.prevent=\"store.startTask(data.row.id)\" :disabled=\"data.row.status === '完成' ||\r\n                            data.row.status === '进行中'\r\n                            \">\r\n                            {{ data.row.status === '失败' ? '重试' : '开始' }}\r\n                        </el-button>\r\n                        <el-button type=\"danger\" @click.prevent=\"handleDeleteTask(data.row.id)\">\r\n                            删除\r\n                        </el-button>\r\n                        <el-button type=\"info\" @click.prevent=\"taskInfoRef.show(data.row)\">\r\n                            查看\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n                >\r\n                <template #append>\r\n                    <div v-if=\"store.loading\" class=\"loading-more\">\r\n                        加载中...\r\n                    </div>\r\n                    <div v-else-if=\"store.hasMore\" class=\"load-more\" @click=\"search(true)\">\r\n                        点击加载更多\r\n                    </div>\r\n                    <div v-else class=\"no-more\">没有更多数据了</div>\r\n                </template>\r\n            </el-table>\r\n        </div>\r\n        <TaskInfo ref=\"taskInfoRef\" />\r\n        <AddTask ref=\"addTaskRef\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { Search, Refresh } from '@element-plus/icons-vue'\r\nimport { useReviewTask } from '@/store/reviewTask'\r\nimport { onMounted } from 'vue'\r\nimport { ElMessageBox, ElMessage } from 'element-plus'\r\nimport TaskInfo from '@/components/review/TaskInfo.vue'\r\nimport AddTask from '@/components/review/AddTask.vue'\r\n\r\nconst store = useReviewTask()\r\nconst taskInfoRef = ref()\r\nconst addTaskRef = ref()\r\n\r\nonMounted(() => {\r\n    search()\r\n})\r\n\r\nconst handleAddTask = () => {\r\n    addTaskRef.value.show()\r\n}\r\n\r\nconst handleDeleteTask = async (id) => {\r\n    try {\r\n        await ElMessageBox.confirm('确定要删除此任务吗？', '删除确认', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            effect: 'dark'\r\n        })\r\n        store.deleteTask(id)\r\n        ElMessage.error('删除成功')\r\n    } catch (error) {\r\n        // 用户点击取消\r\n    }\r\n}\r\n\r\nconst search = async (flag = false) => {\r\n    try {\r\n        await store.searchTasks(flag)\r\n    } catch (error) {\r\n        ElMessage.error(error.response?.data || error.message)\r\n    }\r\n}\r\n\r\nconst resetSearch = async () => {\r\n    try {\r\n        await store.resetSearch()\r\n    } catch (error) {\r\n        ElMessage.error(error.response?.data || error.message)\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task-container {\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 10px;\r\n    min-height: 90vh;\r\n    width: 100%;\r\n}\r\n\r\n/* 标题栏 */\r\n.task-title {\r\n    color: #efefef;\r\n    width: 97%;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n    border-bottom: 0.5px solid #999;\r\n    user-select: none;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.search-container {\r\n    width: 100%;\r\n}\r\n\r\n/* 表格容器 */\r\n.table-container {\r\n    height: auto;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.table {\r\n    display: block;\r\n    width: 70vw;\r\n}\r\n\r\n.loading-more,\r\n.load-more,\r\n.no-more {\r\n    margin-top: 2px;\r\n    text-align: center;\r\n    color: #5f6468;\r\n}\r\n\r\n/* 表格样式 */\r\n:deep(.el-table) {\r\n    background-color: #343a40;\r\n    color: #d1d5db;\r\n    border: 1px solid #495057;\r\n}\r\n\r\n:deep(.el-table th) {\r\n    background-color: #2c3136;\r\n    color: #ffffff;\r\n    font-weight: bold;\r\n}\r\n\r\n:deep(.el-table tr) {\r\n    background-color: #343a40;\r\n}\r\n\r\n:deep(.el-table--striped .el-table__body tr.el-table__row--striped td) {\r\n    background-color: #3a4148;\r\n}\r\n\r\n:deep(.el-table td),\r\n:deep(.el-table th.is-leaf) {\r\n    border-bottom: 1px solid #495057;\r\n}\r\n\r\n:deep(.el-table--enable-row-hover .el-table__body tr:hover > td) {\r\n    background-color: #3e464e;\r\n}\r\n\r\n/* element-plus */\r\n:deep(.el-form-item__label),\r\n:deep(.el-input__inner) {\r\n    color: #eee;\r\n}\r\n\r\n:deep(.el-select__wrapper *),\r\n:deep(.el-select__wrapper),\r\n:deep(.el-input__wrapper) {\r\n    background-color: #343a40;\r\n    color: #d1d5db;\r\n}\r\n\r\n/* 按钮样式 */\r\n\r\n.el-button--primary {\r\n    background-color: #3a5a9c;\r\n    border-color: #4a6db3;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--primary:hover {\r\n    background-color: #4a6db3;\r\n    border-color: #5a7dc3;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--success {\r\n    background-color: #28a746d6;\r\n    border-color: #28a745;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--success:hover {\r\n    background-color: #34c759d9;\r\n    border-color: #34c759;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--danger {\r\n    background-color: #dc3546dc;\r\n    border-color: #dc3545;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--danger:hover {\r\n    background-color: #ff3a30d7;\r\n    border-color: #ff3b30;\r\n    color: #ffffff;\r\n}\r\n\r\n.el-button--info {\r\n    background-color: #343a40;\r\n    border-color: #495057;\r\n    color: #d1d5db;\r\n}\r\n\r\n.el-button--info:hover {\r\n    background-color: #3e464e;\r\n    border-color: #6c757d;\r\n    color: #ffffff;\r\n}\r\n</style>\r\n","import script from \"./ReviewTask.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReviewTask.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReviewTask.vue?vue&type=style&index=0&id=333ba970&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-333ba970\"]])\n\nexport default __exports__","import axios from 'axios'\r\nimport { useAuthStore } from './store/auth'\r\nimport router from './router'\r\n\r\nconst http = axios.create({\r\n  baseURL: '/api'\r\n})\r\n\r\n// 请求拦截器：添加token\r\nhttp.interceptors.request.use(config => {\r\n  const authStore = useAuthStore()\r\n  if (authStore.token) {\r\n    config.headers.Authorization = `Bearer ${authStore.token}`\r\n  }\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\n// 响应拦截器：处理token失效和数据格式\r\nhttp.interceptors.response.use(response => {\r\n  // 如果响应数据有body字段，则直接返回body内容\r\n  if (response.data && response.data.body) {\r\n    return {\r\n      ...response,\r\n      data: response.data.body\r\n    }\r\n  }\r\n  return response\r\n}, error => {\r\n  if (error.response.status === 401) {\r\n    const authStore = useAuthStore()\r\n    authStore.clearAuth()\r\n    // 跳转到登录页\r\n    router.push('/login')\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default http"],"names":["useReviewTask","defineStore","state","data","loading","hasMore","params","url","status","page","size","actions","searchTasks","append","this","response","http","get","length","startTask","id","post","deleteTask","delete","addTask","fullUrl","resetSearch","visible","ref","currentData","handleClose","done","formatDate","dateString","date","Date","toLocaleString","__expose","show","value","__exports__","store","form","handleSubmit","ElMessage","success","taskInfoRef","addTaskRef","onMounted","search","handleAddTask","handleDeleteTask","async","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","effect","error","flag","message","axios","create","baseURL","interceptors","request","use","config","authStore","useAuthStore","token","headers","Authorization","Promise","reject","body","clearAuth","router","push"],"sourceRoot":""}